//【解题思路】： 采用递归思想： ①物品n个，物品体积逐一放入weight[]中 ②递归函数count(int s,int n) : 其 中s为剩余物品重量，n为剩余可选的物品个数
  //      则分以下两步递归求解：
    //    a.从后往前装，装上weight[n]后，若剩余物品仍然有解
      //  则count(s-weight[n],n-1);
        //b.若装了weight[n]后，无解，则删除该包,尝试第n-1个
        //count(s,n-1);
import java.util.Scanner;

public class Volume {
    static int[] weight;//存放每个想要的物品的体积
    static int N;//想要物品的个数
    static int count;//几种组合方式
    private static void count(int s, int n) {
        //如果刚好装满
        if(s==0){
            ++count;
            return;
        }
        //是s<0或n<1则不能完成
        if(s<0||(s>0&&n<1)) return;
        count(s-weight[n],n-1);
        count(s,n-1);
    }

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        while (sc.hasNext()) {
            N = sc.nextInt();
            weight=new int[N+1];
            for (int i = 1; i <= N; i++) {
                weight[i]=sc.nextInt();
            }
            count(40,N);
            System.out.println(count);
        }
    }
}
